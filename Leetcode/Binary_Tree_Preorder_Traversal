/**
 * Definition for binary tree
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    vector<int> preorderTraversal(TreeNode *root) {
        vector<int> result;
        stack<TreeNode*> trace;
        if(!root) return result;
        TreeNode* p=root;
        while(p||!trace.empty())
        {
            if(p)
            {
                result.push_back(p->val);
                trace.push(p);
                p=p->left;
            }
            else
            {
                TreeNode* t=trace.top();
                trace.pop();
                p=t->right;
            }
        }
        return result;
    }
};
